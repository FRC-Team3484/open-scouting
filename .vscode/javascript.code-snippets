{
	// Place your open-scouting workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Emit custom event": {
		"scope": "javascript,html",
		"prefix": "emit",
		"body": [
			"window.dispatchEvent(new CustomEvent('${1:event_name}', {",
			"    detail: { ${2:event_details} }",
			"}));$0"
		],
		"description": "Dispatch a custom event"
	},

	"Recieve custom event": {
		"scope": "javascript,html",
		"prefix": "recieve",
		"body": [
			"window.addEventListener('${1:event_name}', (event) => {",
			"    event.stopImmediatePropagation();",
			"    const { ${2:event_details} } = event.detail;",
			"    ",
			"    $0",
			"});"
		],
		"description": "Recieve custom event"
	}
}